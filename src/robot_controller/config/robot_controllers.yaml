controller_manager:
  ros__parameters:
    update_rate: 100  # Hz

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    mecanum_controller:
      type: mecanum_drive_controller/MecanumDriveController

# Configuração do controlador mecanum
mecanum_controller:
  ros__parameters:
    # Tempo máximo sem receber referência antes de resetar (0 => reseta a cada ciclo)
    reference_timeout: 0.5

    # Nomes das juntas (command) exatamente como no ros2_control
    front_left_wheel_command_joint_name: front_left_wheel_joint
    front_right_wheel_command_joint_name: front_right_wheel_joint
    rear_right_wheel_command_joint_name: back_right_wheel_joint
    rear_left_wheel_command_joint_name: back_left_wheel_joint

    # (Opcional) nomes de juntas de estado se forem diferentes das de comando
    # front_left_wheel_state_joint_name: ""
    # front_right_wheel_state_joint_name: ""
    # rear_right_wheel_state_joint_name: ""
    # rear_left_wheel_state_joint_name: ""

    kinematics:
      # Offsets do frame base_link se o eixo geométrico não coincidir (mantido 0)
      base_frame_offset: { x: 0.0, y: 0.0, theta: 0.0 }
      # Raio efetivo da roda (m) – conferir se 32.5mm é o valor certo de contato
      wheels_radius: 0.0325
      # lx + ly: metade do comprimento + metade da largura (usado para componente rotacional)
      sum_of_robot_center_projection_on_X_Y_axis: 0.1645  # 0.08 + 0.0845

    # Frames de odometria
    base_frame_id: base_link
    odom_frame_id: odom

    # Publicar TF da odometria
    enable_odom_tf: true

    # Prefixo TF (mantido vazio => usa namespace do controlador se configurado)
    tf_frame_prefix_enable: true
    tf_frame_prefix: ""

    # Covariâncias (ajuste fino depois conforme ruído esperado)
    twist_covariance_diagonal: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
    pose_covariance_diagonal:  [0.1, 0.1, 0.1, 0.1, 0.1, 0.1]

    # (Exemplos de limites se quiser ativar depois)
    # linear_velocity.x.has_velocity_limits: true
    # linear_velocity.x.max_velocity: 0.8
    # linear_velocity.y.has_velocity_limits: true
    # linear_velocity.y.max_velocity: 0.8
    # angular_velocity.z.has_velocity_limits: true
    # angular_velocity.z.max_velocity: 2.0

    # (Ganhos PID se o modo interno suportar futuramente – não aplicável agora)
    # linear_velocity.x.kp: 1.0
    # linear_velocity.y.kp: 1.0
    # angular_velocity.z.kp: 1.0
